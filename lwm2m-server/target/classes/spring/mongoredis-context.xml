<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       	xmlns:p="http://www.springframework.org/schema/p" 
       	xmlns:c="http://www.springframework.org/schema/c"
       	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd">

	<!-- 상용 싱글 구성 -->
	<mongo:db-factory host="${mongo.host}" port="${mongo.port}" dbname="${mongo.database}" username="${mongo.username}" password="${mongo.pass}"/>
	
	<!-- MongoDB Template -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
		<property name="writeConcern" value="SAFE" />
	</bean>
	
	<!-- <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:usePool="true" p:hostName="${redis.host}" p:port="${redis.port}"/>

	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="stringRedisSerializer" />
		<property name="hashValueSerializer" ref="stringRedisSerializer" />
	</bean> -->
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
      <property name="maxTotal" value="${redis.maxTotal}"/>
      <property name="maxIdle" value="${redis.maxIdle}"/>
      <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
      <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
      <property name="testOnReturn" value="${redis.testOnReturn}"/>
      <property name="testWhileIdle" value="${redis.testWhileIdle}"/>
      <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"/>
      <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"/>
      <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"/>
    </bean>

    <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
      <constructor-arg index="0" ref="jedisPoolConfig"/>
      <constructor-arg index="1" value="${redis.host}"/>
      <constructor-arg index="2" value="${redis.port}" type="int"/>
      <constructor-arg index="3" value="5000" type="int"/>
      <!-- <constructor-arg index="4" value="${redis.password}"/> -->
    </bean>
    
	<!-- Use this post processor to translate any Exceptions thrown in @Repository 
		annotated classes -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>